/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.metel.goldman.gui;

import com.metel.goldman.gamemap.loader.abstracts.AbstractMapLoader;
import com.metel.goldman.models.SaveGameTableModel;
import com.metel.goldman.objects.MapInfo;
import com.metel.goldman.objects.SavedMapInfo;
import com.metel.goldman.utils.MessageManager;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Metel
 */
public class FrameSavedGames extends BaseChildFrame {

    private AbstractMapLoader mapLoader;
    private SaveGameTableModel model;
    private FrameGame frameGame;
    private ArrayList<SavedMapInfo> list;

    public FrameSavedGames(AbstractMapLoader mapLoader, FrameGame frameGame) {
        initComponents();
        this.mapLoader = mapLoader;
        this.frameGame = frameGame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSaves = new javax.swing.JTable();
        jbtnReturn = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jbtnLoadGame = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jTableSaves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableSaves);

        jbtnReturn.setText("<< Back");
        jbtnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnReturnActionPerformed(evt);
            }
        });

        jbtnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/metel/goldman/images/delete.png"))); // NOI18N
        jbtnDelete.setText("Delete");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        jbtnLoadGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/metel/goldman/images/load.png"))); // NOI18N
        jbtnLoadGame.setText("Load");
        jbtnLoadGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLoadGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnLoadGame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnReturn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbtnDelete, jbtnLoadGame});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnReturn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnDelete)
                    .addComponent(jbtnLoadGame))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(659, 423));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnLoadGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLoadGameActionPerformed
        int index = jTableSaves.getSelectedRow();

        if (index < 0) {
            return;
        }

        MapInfo mapInfo = model.getMapInfo(index);

        mapLoader.loadMap(mapInfo);

        closeFrame();

        frameGame.showFrame(getParentFrame());                             
    }//GEN-LAST:event_jbtnLoadGameActionPerformed

    private void jbtnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnReturnActionPerformed
        closeFrame();
    }//GEN-LAST:event_jbtnReturnActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        int index = jTableSaves.getSelectedRow();

        if (index < 0) {
            return;
        }

        int result = MessageManager.showYesNoMessage(this, "Confirm removing?");
        switch (result) {
            case JOptionPane.YES_OPTION: {

                MapInfo mapInfo = model.getMapInfo(index);

                mapLoader.deleteSavedMap(mapInfo);

                model.deleteMapInfo(index);
                model.refresh();
                break;
            }
            case JOptionPane.NO_OPTION:
            case JOptionPane.CANCEL_OPTION:
        }
    }//GEN-LAST:event_jbtnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSaves;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnLoadGame;
    private javax.swing.JButton jbtnReturn;
    // End of variables declaration//GEN-END:variables

    @Override
    protected void showFrame(JFrame parent) {

        list = mapLoader.getSavedMapList(mapLoader.getGameMap().getMapInfo().getUser());

        model = new SaveGameTableModel(list);

        jTableSaves.setModel(model);

        jTableSaves.setRowHeight(40);

        super.showFrame(parent);

        if (list.isEmpty()) {
            MessageManager.showErrorMessage(this, "No saved games!");
        }
    }
}
